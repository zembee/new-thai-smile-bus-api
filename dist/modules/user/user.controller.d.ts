import CreateUserDto from './dto/create-user.dto';
import UserResponseDto from './dto/user-response.dto';
import UpdateUserDto from './dto/update-user.dto';
import UpdatePasswordDto from './dto/update-password.dto';
import { IUser } from './user.schema';
import DriverTimelineDto from './dto/driver-timeline.dto';
import { DriverTimeline } from './driver-timeline.schema';
import ResetPasswordDto from './dto/reset-password.dto';
import DriverTimelineListDto from './dto/driver-timeline-list.dto';
export declare class UserController {
    private readonly userService;
    private readonly otpService;
    private readonly vehicleService;
    createBetTransaction(body: CreateUserDto): Promise<UserResponseDto>;
    me(user: UserResponseDto): Promise<UserResponseDto>;
    updateInfo(user: UserResponseDto, body: UpdateUserDto): Promise<{
        googleId?: string;
        lastName: string;
        code: string;
        depot?: string;
        prefix: string;
        roles?: string[];
        latestLogin?: Date;
        vehicle?: string;
        jobSign?: Date;
        password: string;
        driverLicense?: string;
        driverLicenseExpire?: string;
        objectId?: string;
        email: string;
        updatedBy?: string;
        address2?: string;
        address1?: string;
        sex?: string;
        facebookId?: string;
        birthDate?: Date;
        appleId?: string;
        token?: string;
        firstName: string;
        phoneNumber: string;
        createdBy?: string;
        jobOut?: Date;
        position?: string;
        username: string;
        status?: string;
    }>;
    updatePassword(user: IUser, body: UpdatePasswordDto): Promise<boolean>;
    deleteUser(objectId: string): Promise<any>;
    driverCheckIn(user: IUser, body: DriverTimelineDto): Promise<DriverTimeline>;
    driverTimeline(user: IUser, query: DriverTimelineListDto): Promise<any>;
    resetPassword(body: ResetPasswordDto): Promise<boolean>;
    comparePassword(original: string, hashed: string): Promise<boolean>;
    validateEmail(email: any): boolean;
}
